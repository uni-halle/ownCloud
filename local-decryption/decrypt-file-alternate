#!/bin/bash

function printErr() {
	echo "$@" >&2
}

function decryptFile() {
	USER="$1"
	encFilePath="$2"
	userKeyFile=$(pwd)/$USER.pKey.pem
	cd ../oc-data
	#echo "WD: $(pwd)"
	if [ ! -r "${USER}/$encFilePath" ]; then
		printErr "decryptFile():: File "${USER}/$encFilePath" does not exist or not enough permissions! Aborting."
		return 1
	fi
	if ! grep -q "^HBEGIN:" "${USER}/$encFilePath"; then
		printErr "decryptFile():: File "${USER}/$encFilePath" does not seem to be encrypted! Aborting."
		return 2
	fi
	printErr "decryptFile():: Started decryption of "${USER}/$encFilePath" .."
	# --- Get the FileKey ---
	## remove leading portion from string
	# ${string#$prefix}
	## remove trailing portion from string
	# ${string%$suffix}
	#userFileShareKeyPath="${USER}/files_encryption/keys/${encFilePath}/OC_DEFAULT_MODULE/${USER}.shareKey"
	#encFileKeyPath="${USER}/files_encryption/keys/${encFilePath}/OC_DEFAULT_MODULE/fileKey"
	userFileShareKeyPath="${USER}/files_encryption/share-keys/${encFilePath#files/}.${USER}.shareKey"
	encFileKeyPath="${USER}/files_encryption/keyfiles/${encFilePath#files/}.key"

	if [ ! -f "$userFileShareKeyPath" ]; then
		printErr "ShareKey not found: $userFileShareKeyPath. Aborting."
		return 4
	fi
	if [ ! -f "$encFileKeyPath" ]; then
		printErr "FileKey not found: $encFileKeyPath. Aborting."
		return 5
	fi

	decUserFileShareKeyHEX="$( openssl rsautl -decrypt -inkey $userKeyFile -in "$userFileShareKeyPath" |od -An -tx1 |tr -dc '[:xdigit:]' )"
	if [ -z "$decUserFileShareKeyHEX" ]; then
		printErr "decryptFile():: The User Private Key is not good. Are you sure your ownCloud User Login password is correct?"
		return 3
	fi

	decFileKeyContentHEX="$( openssl rc4 -d -in "$encFileKeyPath" -K $decUserFileShareKeyHEX | od -An -tx1 | tr -dc '[:xdigit:]' )"
        decFileKeyContentHEX=${decFileKeyContentHEX:0:64}

        chunkSize=8192
        while read -d '' -n $chunkSize CHUNK; do
                #split chunk into payload an iv string (strip padding from iv)          
                read payload iv <<<`echo $CHUNK | sed -r 's/(.*)00iv00(.{16})xx/\1 \2/'`
                # convert base64 iv into hex
                iv=$(echo -n "$iv" | od -An -tx1 | tr -dc '[:xdigit:]' )
                # decode chunk
                openssl enc -AES-256-CFB -d -nosalt -base64 -A -K $decFileKeyContentHEX -iv $iv -in <(echo "$payload")
        done <<<`sed -r 's/^HBEGIN:.+:HEND-*//' <"$encFilePath"`
	printErr "decryptFile():: Decryption of "${USER}/$encFilePath" finished."
}

if [ $# -gt 1 ]; then
	decryptFile "$1" "$2"
fi


